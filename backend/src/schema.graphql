# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreatePostInput {
  subject: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createPost(data: CreatePostInput!): Post!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Post {
  author: String!
  content: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  imageUrl: String!
  likeCount: Int!
  poemRequest: String!
  poemStyle: String!
  poetInspiration: String!
  published: Boolean!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type PostConnection {
  edges: [PostEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PostEdge {
  cursor: String!
  node: Post!
}

input PostOrder {
  direction: OrderDirection!
  field: PostOrderField!
}

"""Properties by which post connections can be ordered."""
enum PostOrderField {
  content
  createdAt
  id
  published
  title
  updatedAt
}

type Query {
  hello(name: String!): String!
  helloWorld: String!
  post(postId: String!): Post!
  posts: [Post!]!
  publishedPosts(after: String, before: String, first: Int, last: Int, orderBy: PostOrder, query: String, skip: Int): PostConnection!
}

type Subscription {
  postCreated: Post!
}